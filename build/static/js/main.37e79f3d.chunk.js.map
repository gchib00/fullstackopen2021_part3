{"version":3,"sources":["components/Notification.js","services/contacts.js","components/AddContact.js","components/Filter.js","components/ContactList.js","App.js","index.js"],"names":["Notification","content","style_container","width","height","backgroundColor","display","justifyContent","alignItems","includes","style","color","fontSize","url","getAll","axios","get","then","response","data","exportedObject","addPerson","person","post","removePerson","id","delete","updateNumber","changedObject","put","name","number","catch","error","console","log","AddContact","persons","setPersons","existingNames","useState","newName","setNewName","newNumber","setNewNumber","notification_added","setNotification_added","notification_numChanged","setNotification_numChanged","notification_userDeleted","setNotification_userDeleted","notification_inputIssue","setNotification_inputIssue","onSubmit","event","preventDefault","value","onChange","target","type","onClick","toLowerCase","some","alert","window","confirm","object","find","contactList","length","setTimeout","newPerson","Filter","setFilteredArray","filter","setFilter","filteredNames","filteredObjects","useEffect","ContactList","filteredArray","deleteContact","map","App","contacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37e79f3d.chunk.js","sourcesContent":["\n\nconst Notification = ({content}) => {\n    let style_container = {\n        width: '500px',\n        height: '30px',\n        backgroundColor: 'green',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n    const style_mainText = {\n        color: 'white',\n        fontSize: '1.2rem',\n    }\n    if (content === 'Unable to update, contact no longer exists') {\n        style_container = {\n            width: '500px',\n            height: '30px',\n            backgroundColor: 'red',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        }\n    }\n    if (content.includes('Person validation failed')){\n        style_container = {\n            width: '700px',\n            height: '80px',\n            backgroundColor: 'red',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        }\n    }\n\n    return(\n        <div style={style_container}>\n            <p style={style_mainText}>{content}</p>\n        </div>\n    )\n}\n\n\nexport default Notification","import axios from 'axios'\n\nconst url = '/api/persons/'\n\nconst getAll = () => {\n    const request = axios.get(url)\n    return request.then(response => response.data)\n}\nconst addPerson = (person) => {\n      return axios.post(url, person).then(getAll)\n}\nconst removePerson = (id) => {\n    return axios.delete(url+id).then(getAll)\n}\nconst updateNumber = (changedObject) => {\n    return axios\n        .put(url+changedObject.id, {name: changedObject.name, number: changedObject.number})\n        .then(getAll)\n        .catch (error => {\n            console.log('failed at updateNumber: ',error) \n        })\n}\n\nconst exportedObject = { addPerson, getAll, removePerson, updateNumber }\nexport default exportedObject","import React, { useEffect, useState } from 'react'\nimport Notification from './Notification'\nimport contactList from '../services/contacts'\n\nconst AddContact = ({ persons, setPersons, existingNames }) => {\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ notification_added, setNotification_added ] = useState(false)\n    const [ notification_numChanged, setNotification_numChanged ] = useState(false)\n    let [ notification_userDeleted, setNotification_userDeleted ] = useState('')\n    let [ notification_inputIssue, setNotification_inputIssue] = useState('')\n\n    const handleSubmit = (event) => {\n      event.preventDefault()\n    }\n    const handleNameChange = (event) => {\n      setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n    }\n    const addName = () => {\n      if (existingNames.includes(newName.toLowerCase())) {         \n        if (persons.some(person => person.number === newNumber)){\n          alert(`'${newName}' is already added to the phonebook!`)\n        } else {\n          if (window.confirm(`${newName} is already added to the phonebook. Would you like to replace the old phone number with the new one?`)) {\n            //Find the object that needs to be updated:\n            let object = persons.find(person => person.name === newName)\n            //Update the object\n            object.number = newNumber\n            //Pass the updated object to db in order to update the json file\n            contactList.updateNumber(object) \n              .then(response => {\n                if (persons.length > response.length){ \n                  //if response array is smaller, it means that 'updateNumber()' has caught an error and one item got excluded from persons array\n                  setNotification_userDeleted(true)\n                }\n                setPersons(response) //update the persons array\n              })\n              .catch(error => console.log(error.response.data)) \n            console.log(notification_userDeleted)\n            if (notification_userDeleted === false){\n              setNotification_numChanged(true)\n              setTimeout(() => {\n                setNotification_numChanged(false)\n              }, 4000)\n            } else {\n              setTimeout(() => {\n                setNotification_userDeleted(false)\n              }, 5000)\n            }\n          }\n        }\n      } else {\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n        contactList.addPerson(newPerson)\n          .then(response => {\n            setPersons(response)\n\n            setNotification_added(true)\n            setTimeout( () => {\n              setNotification_added(false)\n            }, 4000)\n        })\n        .catch(error => {\n          setNotification_inputIssue(error.response.data.error)\n          setTimeout( () => {\n            setNotification_inputIssue('')\n          }, 10000)\n        })\n    }\n  }\n\n\n    return(\n      <div>\n        <form onSubmit={handleSubmit}>\n          <div>name: <input value={newName} onChange={handleNameChange} /></div>\n          <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n          <div>\n            <button type=\"submit\" onClick={addName}>add</button>\n          </div>\n        </form>\n        <div>\n          {notification_added === true ? \n            <Notification content={`${newName} has been added`} />\n          :\n            null\n          }\n          {notification_numChanged === true ? \n            <Notification content={`Number has been changed to ${newNumber}`} />\n          :\n            null\n          }\n          {notification_userDeleted === true ?\n            <Notification content={'Unable to update, contact no longer exists'} />\n          :\n            null\n          }\n          {notification_inputIssue !== '' ?\n            <Notification content={notification_inputIssue} />\n          :\n            null\n          }\n        </div>\n      </div>\n    )\n\n}\n\nexport default AddContact","import React, { useEffect, useState } from 'react'\n\nconst Filter = ({ persons, existingNames, setFilteredArray }) => {\n    const [ filter, setFilter ] = useState('')\n    \n    const filteredNames = existingNames.filter(name => name.includes(filter.toLowerCase())) \n    const filteredObjects = persons.filter(person => filteredNames.includes(person.name.toLowerCase()))  \n    \n    const handleChange = (event) => {\n        setFilter(event.target.value) \n    } \n\n    useEffect(() => {\n        setFilteredArray(filteredObjects)\n        if (filter === \"\") {    ///need to empty the filteredArray if input is empty, otherwise it retains previous values\n            setFilteredArray([])\n        }\n    }, [filter, setFilteredArray])\n\n\n    return(\n        <div>\n            Filter contact list: <input value={filter} onChange={handleChange} /> \n        </div>\n    )\n}\n    \n\nexport default Filter","import contactList from '../services/contacts' \n\nconst ContactList = ({ filteredArray, persons, setPersons, setFilteredArray }) => {\n\n    const deleteContact = (person) => {\n        const id = person.id\n        const name=person.name\n        if (window.confirm(`Delete ${name}?`)) {\n            contactList.removePerson(id) //removes contact from db.json\n            //update arrays:\n            setPersons(persons.filter(person => person.id !== id)) \n            if (filteredArray.map(persons => persons.id === id)) {\n                setFilteredArray(filteredArray.filter(person => person.id !== id))\n            }\n        }\n    }\n\n\n    return(\n        <ul>\n            {(filteredArray.length > 0) ? \n                filteredArray.map(person => \n                    <div key={person.name} style={{display: 'flex', justifyContent: 'flex-start'}}>\n                        <li>{person.name} - {person.number}</li>\n                        <button onClick={() => deleteContact(person)}>delete</button>\n                    </div>)\n            :\n                persons.map(person => \n                    <div key={person.name} style={{display: 'flex', justifyContent: 'flex-start'}}>\n                        <li>{person.name} - {person.number}</li>\n                        <button onClick={() => deleteContact(person)}>delete</button>\n                    </div>)\n            }\n      </ul>\n    )\n}\n\nexport default ContactList","import React, { useEffect, useState } from 'react'\nimport AddContact from './components/AddContact'\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\n\nimport contacts from './services/contacts'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ filteredArray, setFilteredArray ] = useState([])\n\n  const existingNames = persons.map(person => person.name.toLowerCase())  \n\n  useEffect( () => {\n    contacts.getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  },[])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter persons={persons} existingNames={existingNames} setFilteredArray={setFilteredArray} />\n      <h2>Add New</h2>\n      <AddContact persons={persons} setPersons={setPersons} existingNames={existingNames} />\n      <h2>Numbers</h2>\n      <ContactList persons={persons} setPersons={setPersons} filteredArray={filteredArray} setFilteredArray={setFilteredArray} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}